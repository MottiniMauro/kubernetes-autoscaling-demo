kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-consumer-application
  labels:
    app_name:  kafka-consumer-application
spec:
  revisionHistoryLimit: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 10
  replicas: 1
  selector:
    matchLabels:
      app_name:  kafka-consumer-application
  template:
    metadata:
      labels:
        app_name:  kafka-consumer-application
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9308'
    spec:
      containers:
        - name: kafka-exporter
          image: danielqsj/kafka-exporter:v1.2.0
          imagePullPolicy: IfNotPresent
          command:
            - kafka_exporter
            - "--kafka.server=scraper-kafka-bootstrap:9092"
          ports:
            - name: http-metrics
              containerPort: 9308
          readinessProbe:
            httpGet:
              path: kafka-application
              port: 9308
            initialDelaySeconds: 5
            timeoutSeconds: 5
        - name:  kafka-application
          image:  confluentinc/cp-kafka:5.0.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              while true
                do
                kafka-console-consumer --bootstrap-server scraper-kafka-bootstrap:9092 --topic my-topic --from-beginning --group we-consume --timeout-ms 2000 --max-messages 1
                sleep 30
              done
